plugins {
    id 'com.android.application'
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
}

android {
    namespace 'com.sssl.seqrgraphdemo'
    compileSdk 34

    defaultConfig {
        applicationId "com.sssl.seqrgraphdemo"
        minSdk 24
        targetSdk 34
        versionCode 2
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'arm64-v8a', 'armeabi-v7a'
            //  abiFilters 'armeabi-v7a'
        }
    }

    packagingOptions {


        jniLibs {


            pickFirsts += [
                    'lib/armeabi-v7a/libc++_shared.so',
                    'lib/x86/libc++_shared.so',
                    'lib/x86_64/libc++_shared.so',
                    'lib/arm64-v8a/libc++_shared.so',
                    'lib/armeabi-v7a/libncnn.so',
                    'lib/arm64-v8a/libncnn.so',]
        }


        resources {
            pickFirsts += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md']
        }

    }

    signingConfigs {
//        debug {
//            storeFile file('debug.keystore')
//            storePassword 'android'
//            keyAlias 'androiddebugkey'
//            keyPassword 'android'
//        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.release
//            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    implementation 'com.nimbusds:nimbus-jose-jwt:9.31'

    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-crashlytics")

    implementation 'androidx.navigation:navigation-fragment:2.7.4'
    implementation 'androidx.navigation:navigation-ui:2.7.4'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.google.zxing:core:3.3.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    // CameraX core library
    def camerax_version = '1.2.3'
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    implementation "androidx.camera:camera-view:$camerax_version"

    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.1'

//    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'

    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'



    //noinspection GradleCompatible
    implementation 'com.android.support:design:26.1.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'

    // crypto graph sdk
    implementation project(path: ':AirsnapFingerUI')
    implementation project(path: ':AirsnapFinger')

    implementation(project(path: ':AirsnapFaceUI'))
    implementation(project(path: ':AirsnapFaceCore'))

    implementation(project(path: ':tensorflow-lite'))
    implementation(project(path: ':tensorflow-lite-select-tf-ops'))
    implementation(project(path: ':tensorflow-lite-support'))

    implementation(project(":OmniMatch"))
    implementation(project(":T5CryptographClient"))

}

task wrapper(type: Wrapper){
    gradleVersion = '8.0'
}
tasks.register("preparekotlinbuildscriptmodel"){}